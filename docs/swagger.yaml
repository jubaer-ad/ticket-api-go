definitions:
  models.HealthResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  models.Ticket:
    properties:
      active:
        type: boolean
      category:
        type: string
      description:
        type: string
      id:
        type: string
      priority:
        type: integer
      progress:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/tickets:
    get:
      consumes:
      - application/json
      description: Get all tickets
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/models.Ticket'
            type: array
      summary: Get all tickets
      tags:
      - tickets
    post:
      consumes:
      - application/json
      description: Creates a new ticket.
      parameters:
      - description: Ticket object
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/models.Ticket'
      produces:
      - application/json
      responses:
        "201":
          description: Ticket created
          schema:
            type: string
      summary: Create a new ticket
      tags:
      - tickets
  /api/tickets/{id}:
    delete:
      description: Deletes a ticket from the MongoDB collection by BSON ID
      parameters:
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ticket deleted
          schema:
            type: string
        "400":
          description: Invalid ID format
          schema:
            type: string
        "404":
          description: Ticket not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a ticket by ID
      tags:
      - tickets
    get:
      description: Get a ticket by its ID
      parameters:
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.Ticket'
        "404":
          description: Ticket not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a ticket by ID
      tags:
      - tickets
    put:
      consumes:
      - application/json
      description: Updates a ticket in the MongoDB collection by its ID.
      parameters:
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Ticket object
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/models.Ticket'
      produces:
      - application/json
      responses:
        "200":
          description: Ticket updated
          schema:
            type: string
        "400":
          description: Invalid ID format or bad request
          schema:
            type: string
        "404":
          description: Ticket not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a ticket by ID
      tags:
      - tickets
  /health:
    get:
      description: Responds with a simple message for all method requests.
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/models.HealthResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Server Health Check
      tags:
      - health
swagger: "2.0"
